{{- if .Values.kibana.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kibana.fullname" . }}
  labels: {{ include "kibana.labels" . | nindent 4 }}
{{ include "elkstack.namespace" . | indent 2 }}
spec:
  replicas: {{ .Values.kibana.replicas }}
  strategy:
{{ toYaml .Values.kibana.updateStrategy | indent 4 }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name | quote }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name | quote }}
        {{- range $key, $value := .Values.kibana.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      annotations:
        {{- range $key, $value := .Values.kibana.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{/* This forces a restart if the configmap has changed */}}
        {{- if .Values.kibana.kibanaConfig }}
        configchecksum: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
        {{- end }}
    spec:
{{- if .Values.kibana.priorityClassName }}
      priorityClassName: {{ .Values.kibana.priorityClassName }}
{{- end }}
      securityContext:
{{ toYaml .Values.kibana.podSecurityContext | indent 8 }}
      {{- if .Values.kibana.serviceAccount }}
      serviceAccount: {{ .Values.kibana.serviceAccount }}
      {{- end }}
      {{- if .Values.kibana.hostAliases }}
      hostAliases: {{ toYaml .Values.kibana.hostAliases | nindent 6 }}
      {{- end }}
      volumes:
        {{- range .Values.kibana.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- if .Values.kibana.kibanaConfig }}
        - name: kibanaconfig
          configMap:
            name: {{ template "kibana.fullname" . }}-config
        {{- end }}
    {{- with .Values.kibana.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.kibana.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.kibana.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- if .Values.kibana.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.kibana.imagePullSecrets | indent 8 }}
    {{- end }}
      {{- if .Values.kibana.extraInitContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      initContainers:
      {{- if eq "string" (printf "%T" .Values.kibana.extraInitContainers) }}
{{ tpl .Values.kibana.extraInitContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.kibana.extraInitContainers | indent 6 }}
      {{- end }}
      {{- end }}
      containers:
      - name: kibana
        securityContext:
{{ toYaml .Values.kibana.securityContext | indent 10 }}
        image: "{{ .Values.imagestore.kibana.registry }}{{ .Values.imagestore.kibana.repository }}:{{ .Values.imagestore.kibana.tag }}"
        imagePullPolicy: "{{ .Values.kibana.imagePullPolicy }}"
        env:
          {{- if .Values.kibana.elasticsearchURL }}
          - name: ELASTICSEARCH_URL
            value: "{{ .Values.kibana.elasticsearchURL }}"
          {{- else if .Values.kibana.elasticsearchHosts }}
          - name: ELASTICSEARCH_HOSTS
            value: "{{ .Values.kibana.elasticsearchHosts }}"
          {{- end }}
          - name: SERVER_HOST
            value: "{{ .Values.kibana.serverHost }}"
{{- if .Values.kibana.extraEnvs }}
{{ toYaml .Values.kibana.extraEnvs | indent 10 }}
{{- end }}
{{- if .Values.kibana.envFrom }}
        envFrom:
{{ toYaml .Values.kibana.envFrom | indent 10 }}
{{- end }}
        readinessProbe:
{{ toYaml .Values.kibana.readinessProbe | indent 10 }}
          exec:
            command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Kibana Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                    local path="${1}"
                    set -- -XGET -s --fail -L

                    if [ -n "${ELASTICSEARCH_USERNAME}" ] && [ -n "${ELASTICSEARCH_PASSWORD}" ]; then
                      set -- "$@" -u "${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}"
                    fi

                    STATUS=$(curl --output /dev/null --write-out "%{http_code}" -k "$@" "{{ .Values.kibana.protocol }}://localhost:{{ .Values.kibana.httpPort }}${path}")
                    if [[ "${STATUS}" -eq 200 ]]; then
                      exit 0
                    fi

                    echo "Error: Got HTTP code ${STATUS} but expected a 200"
                    exit 1
                }

                http "{{ .Values.kibana.healthCheckPath }}"
        ports:
        - containerPort: {{ .Values.kibana.httpPort }}
{{- if .Values.kibana.lifecycle }}
        lifecycle:
{{ toYaml .Values.kibana.lifecycle | indent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.kibana.resources | indent 10 }}
        volumeMounts:
          {{- range .Values.kibana.secretMounts }}
          - name: {{ .name }}
            mountPath: {{ .path }}
            {{- if .subPath }}
            subPath: {{ .subPath }}
            {{- end }}
          {{- end }}
          {{- range $path, $config := .Values.kibana.kibanaConfig }}
          - name: kibanaconfig
            mountPath: /usr/share/kibana/config/{{ $path }}
            subPath: {{ $path }}
          {{- end -}}
      {{- if .Values.kibana.extraContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      {{- if eq "string" (printf "%T" .Values.kibana.extraContainers) }}
{{ tpl .Values.kibana.extraContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.kibana.extraContainers | indent 6 }}
      {{- end }}
      {{- end }}
{{- end }}
